#!/bin/sh
#
# Copyright (c) 2015,2016 AstroArch Consulting, Inc. All rights reserved
#
#
# A hook script to verify what is about to be committed.
#	-- Looks for IPV4 Addresses
#	-- Looks for Usernames
#	-- Looks for Domain Names
#	-- Looks for Passwords
#	-- Looks for API Keys
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# Reference: http://www.unix-ninja.com/p/A_cheat-sheet_for_password_crackers
#

# Redirect output to stderr.
exec 1>&2

# First Check for IP
regex4='([0-9]{1,3}[\.]){3}[0-9]{1,3}'

# Hashchecks including base64 and API Keys
hashchecks='[0-7][0-9a-f]\{7\}[0-7][0-9a-f]\{7\} \$2a\\$\08\\$\(.\)\{75\} ([0-9a-zA-Z]{32}):(\w{16,32}) ([0-9a-zA-Z]{32}):(\S{3,32}) \$H\$\S{31} \$P\$\S{31} \$S\$\S{52} \$1\$\w{8}\S{22} \$apr1\$\w{8}\S{22} \$6\$\w{8}\S{86} [0-9A-Za-z+/]{60,}= [0-9A-Za-z+/]{20,}'

# CC/SSN/Passport/etc
pii="'4[0-9]{3}[ -]?[0-9]{4}[ -]?[0-9]{4}[ -]?[0-9]{4}' '5[0-9]{3}[ -]?[0-9]{4}[ -]?[0-9]{4}[ -]?[0-9]{4}' '\b3[47][0-9]{13\b' '\b3(?:0[0-5]|[68][0-9])[0-9]{11}\' '6011[ -]?[0-9]{4}[ -]?[0-9]{4}[ -]?[0-9]{4}' '\(?:2131|1800|35\d{3})\d{11}\b' '3[47][0-9]{2}[ -]?[0-9]{6}[ -]?[0-9]{5}' '[0-9]{3}[ -]?[0-9]{2}[ -]?[0-9]{4}' '[0-9]{4}[ -]?[0-9]{2}[ -]?[0-9]{4}' 'C0[0-9]{7}' '[23][0-9]{8}'"

icount=0
ifile=""
dcount=0
dfile=""
hcount=0
hfile=""
pcount=0
pfile=""

for x in `/usr/bin/git diff-index --cached HEAD|/usr/bin/awk '{print $NF}'`
do
	# check for IP Addresses in files

	/bin/grep -Eo "$regex4" "$x" >& /dev/null
	if [ $? = 0 ]
	then
		if [ $icount = 0 ]
		then
			ifile="$x"
		else
			ifile="$ifile \"$x\""	
		fi
		let icount=$icount+1
	fi

	# check for user@domain
	/bin/grep -Eo "[[:alnum:]]+\@[[:alnum:]]+" "$x" >& /dev/null
	if [ $? = 0 ]
	then
		if [ $dcount = 0 ]
		then
			dfile="$x"
		else
			dfile="$dfile \"$x\""	
		fi
		let dcount=$dcount+1
	fi

	# Hashes
	/bin/egrep -oE '(^|[^a-fA-F0-9])[a-fA-F0-9]{32}([^a-fA-F0-9]|$)' "$x" | /bin/egrep -o '[a-fA-F0-9]{32}' >& /dev/null
	if [ $? = 0 ]
	then
		if [ $hcount = 0 ]
		then
			hfile="$x"
		else
			hfile="$hfile \"$x\""	
		fi
		let hcount=$hcount+1
	fi

	for y in $hashchecks
	do
		/bin/egrep -o "$y" "$x" >& /dev/null
		if [ $? = 0 ]
		then
			if [ $hcount = 0 ]
			then
				hfile="$x"
			else
				hfile="$hfile \"$x\""	
			fi
			let hcount=$hcount+1
		fi
	done

	for y in $pii
	do
		/bin/egrep -o "$y" "$x" >& /dev/null
		if [ $? = 0 ]
		then
			if [ $pcount = 0 ]
			then
				pfile="$x"
			else
				pfile="$pfile \"$x\""	
			fi
			let pcount=$pcount+1
		fi
	done
done

doexit=0
logstr=""
if [ $icount -gt 0 ]
then
	echo ""
	echo "Cannot continue due to IP in file(s):"
	for x in $ifile
	do
		echo "	$x"
	done
	echo ""
	/bin/logger "$USER attempted to commit with IP included: $ifile"
	doexit=1
fi
if [ $dcount -gt 0 ]
then
	echo ""
	echo "Cannot continue due to Domain Users in file(s):"
	for x in $dfile
	do
		echo "	$x"
	done
	echo ""
	/bin/logger "$USER attempted to commit with Domain Users included: $dfile"
	doexit=1
fi
if [ $hcount -gt 0 ]
then
	echo ""
	echo "Cannot continue due to Password Hashes in file(s):"
	for x in $hfile
	do
		echo "	$x"
	done
	echo ""
	/bin/logger "$USER attempted to commit with Hashes included: $hfile"
	doexit=1
fi
if [ $pcount -gt 0 ]
then
	echo ""
	echo "Cannot continue due to PII in file(s):"
	for x in $pfile
	do
		echo "	$x"
	done
	echo ""
	/bin/logger "$USER attempted to commit with PII included: $pfile"
	doexit=1
fi
if [ $doexit -gt 0 ]
then
	exit 1
fi
