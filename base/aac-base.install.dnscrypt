#!/bin/sh
#
# Copyright (c) 2017-2018 AstroArch Consulting, Inc. All rights reserved
#
# DNSCrypt Proxy for CentOS/RHEL 7 using DNSMasq

function dnscrypt_version() {
	echo "1.0.0"
}

function dnscrypt() {
	echo "Installing or Updating DNS-Crypt"

	DEVEL="gcc cpp glibc-devel glibc-headers kernel-headers mpfr libmpc libsodium-devel wget bzip2 automake libtool-ltdl-devel"

	# Install needed RPMS
	echo $RPMLIST | grep haveged > /dev/null
	if [ $? != 0 ]
	then
		yum -y install dnsmasq haveged bind-utils lsof libtool-ltdl GeoIP
	fi

	# Start haveged to get entropy
	startsrv haveged

	# download and compile and install
	buildit=0
	which dnscrypt-proxy > /dev/null
	if [ $? = 1 ]
	then
		buildit=1
	else
		v=`curl -sLk https://download.dnscrypt.org/dnscrypt-proxy | awk -F\" '{print $2}' |egrep -v "sig|csv" |grep .tar.bz2 | awk -F- '{print $3}' | sed 's/\.tar.bz2//' | sort -n|tail -1`
		dnscript-proxy --version | grep $v > /dev/null
		if [ $? = 1 ]
		then
			buildit=1
		fi
	fi
	if [ $buildit -eq 1 ]
	then
		yum -y install $DEVEL

		wget https://download.dnscrypt.org/dnscrypt-proxy/LATEST.tar.bz2
		tar -xjf LATEST.tar.bz2
		cd dnscrypt-proxy*
		./configure
		make
		make install
		# to get everything really need to do it again for some reason
		make install
		# This is not copied but necessary
		cp contrib/dnscrypt-update-resolvers.sh /usr/local/bin
	
		cd ..
		# remove development bits
		# security risk to leave these around
		rm -rf dnscrypt-proxy* LATEST.tar.bz2
		rpm -e $DEVEL
	
		# now configure
		DNSCRYPTCONF=/usr/local/etc/dnscrypt-proxy.conf
		# Daemonize
		# use only online resolvers
		# listen on 127.0.0.1:5553
		sed 's%^Daemonize no%Daemonize yes%' $DNSCRYPTCONF | sed 's%# ResolversList /usr/local/share/dnscrypt-proxy/dnscrypt-resolvers.csv%ResolversList /usr/local/share/dnscrypt-proxy/dnscrypt-online-resolvers.csv%' | sed 's%# LocalAddress 127.0.0.1:53%LocalAddress 127.0.0.2:5553%'  > /tmp/dnscrypt-proxy.conf
		cp /tmp/dnscrypt-proxy.conf $DNSCRYPTCONF
	fi
	
	#
	# Now DNSMASQ
	if [ ! -e /etc/dnsmasq.d/02-dnscrypt.conf ]
	then
		echo "server=127.0.0.2#5553" > /etc/dnsmasq.d/02-dnscrypt.conf
		echo "cache-size=3000" >> /etc/dnsmasq.d/02-dnscrypt.conf
	fi
	
	#
	# use our resolvers-check
	# TODO:
	# -- pick +/- 1-2 hours off TZ or closest.
	# -- use IPV6 only if IPV6 address is set
	# -- if logging enabled then disable NO_LOGS?
	
	# resolverscheck.sh, this resolvers-check will select 
	# based on NO_LOGS, IPV4, and country codes.
	if [ ! -e /usr/local/bin/resolvers-check.sh ]
	then
		cat << EOF > /usr/local/bin/resolvers-check.sh
#! /bin/sh

RESOLVERS_LIST=dnscrypt-resolvers.csv
ONLINE_RESOLVERS_LIST=dnscrypt-online-resolvers.csv
DNSCRYPT_PROXY=/usr/local/sbin/dnscrypt-proxy
MARGIN=720
CSV_FILE="${RESOLVERS_LIST}"
TCP_ONLY=""
COUNTRY="US|CA"
IPV4_ONLY="yes"
NO_LOGS="yes"

tmpfile=$(mktemp .${ONLINE_RESOLVERS_LIST}.XXXXXXXXXXXX) || exit 1
trap "rm -f ${tmpfile}" EXIT

if which csvlint > /dev/null; then
  csvlint "$RESOLVERS_LIST" || echo "*** Invalid CSV file ***" >&2
fi

if [ $(cut -d, -f1 $RESOLVERS_LIST | sort | uniq -d | wc -l) -gt 0 ]; then
  echo "Duplicate resolver name" >&2
  exit 1
fi

if [ $(cut -d, -f2 $RESOLVERS_LIST | sort | uniq -d | wc -l) -gt 0 ]; then
  echo "Duplicate resolver long name" >&2
  exit 1
fi

exec < "$RESOLVERS_LIST"
exec > "$tmpfile"

read header
echo "$header" | egrep -q '^Name,' || echo "*** Invalid CSV file ***" >&2

echo "$header"

res=0
while read line; do
  if [ "x${IPV4_ONLY}" != "x" ]; then
    n=$(echo "$line" | egrep -c ',\[[0-9a-fA-F:]+\](:[0-9]+)?,')
    if [ $n -ne 0 ]; then
      continue
    fi
  fi
  resolver_name=$(echo "$line" | cut -d, -f1)
  doeval=1

  if [ "x${COUNTRY}" != "x" ]; then
    ip=$(echo "$line" | gawk -vFPAT='[^,]*|"[^"]*"' '{print $11}'|awk '{n=split($0,v,":"); if (n > 1) { print v[1] } else { print $0 }}')
    /usr/bin/geoiplookup $ip |egrep $COUNTRY >& /dev/null
    if [ $? -eq 0 ]; then
	doeval=1
    else
        doeval=0
    fi
  fi
  if [ $doeval -eq 1 ]; then
    logs=$(echo "$line" | gawk -vFPAT='[^,]*|"[^"]*"' '{print $9}')
    if [ "x${NO_LOGS}" = "x$logs" ]; then
      doeval=1
    else
      doeval=0
    fi
  fi
  if [ $doeval -eq 1 ]; then
  	eval "${DNSCRYPT_PROXY} ${TCP_ONLY} -L ${CSV_FILE} -R ${resolver_name} -t ${MARGIN} -m 1 "
  	if [ $? -eq 0 ]; then
    	   echo "$line"
    	   echo "+ ${resolver_name} - OK" >&2
  	else
    	   echo "- ${resolver_name} - Failed" >&2
    	   res=1
  	fi
   fi
done

mv -f "$tmpfile" "$ONLINE_RESOLVERS_LIST"

exit $res
EOF
	fi

	# Now dnscrypt.cron
	if [ ! -e /etc/cron.daily/dnscrypt.cron ]
	then
		cat << EOF > /etc/cron.daily/dnscrypt.cron
#!/bin/sh

cd /usr/local/share/dnscrypt-proxy

# update the resolvers
/usr/local/bin/dnscrypt-update-resolvers.sh

# extract CA/US with no logging
/usr/local/bin/resolvers-check.sh

# clean up stray 'Netherlands from my CA/US checking. This is optional
grep -v 'Netherlands' dnscrypt-online-resolvers.csv > t
mv t dnscrypt-online-resolvers.csv

# now restart
pkill dnscrypt-proxy
/usr/local/sbin/dnscrypt-proxy /usr/local/etc/dnscrypt-proxy.conf
EOF
	fi

	# Now rc.local to run on boot
	grep dnscrypt-proxy /etc/rc.d/rc.local > /dev/null
	if [ $? != 0 ]
	then
		cat << EOF >> /etc/rc.d/rc.local
# DNSCrypt
sleep 10
/usr/local/sbin/dnscrypt-proxy /usr/local/etc/dnscrypt-proxy.conf
EOF
	fi

	# Now the security bits allow 53 in
	firewall-cmd --list-ports --zone=public |grep 53/udp
	if [ $? != 0 ]
	then
		firewall-cmd --permanent --zone=public --add-port=53/tcp
		firewall-cmd --permanent --zone=public --add-port=53/udp
		firewall-cmd --reload
	fi

	# Change Resolv.conf
	grep "nameserver 127.0.0.1" /etc/resolv.conf > /dev/null
	if [ $? != 0 ]
	then
		echo "nameserver 172.0.0.1" > /etc/resolv.conf
	fi

	# change dnsmasq.service
	grep "--dns-forward-max" /usr/lib/systemd/system/dnsmasq.service
	if [ $? != 0 ]
	then
		awk '/-k/{k=1;printf "%s --dns-forward-max=1024\n",$0;} k==0{print $0;} {k=0};' /usr/lib/systemd/system/dnsmasq.service > /tmp/dnsmasq.service
		cp /tmp/dnsmasq.service /usr/lib/systemd/system/dnsmasq.service
		systemctl daemon-reload
	fi

	# Does not seem to be any selinux setup required
	semanage port -a -t dns_port_t -p tcp 5553
	semanage port -a -t dnssec_port_t -p tcp 5553

	# Start DNSMASQ
	startsrv dnsmasq

	# Start DNSCrypt if we rebuilt
	if [ $buildit -eq 1 ]
	then
		/etc/cron.daily/dnscrypt.cron
	fi


	if [ $CREATEREPO -eq 1 ]
	then
		ver=`/usr/local/sbin/dnscrypt-proxy --version |head -1 |awk '{print $2}'`
		fpm -s dir -t rpm -n dnscrypt-proxy -v $ver /usr/local/share/dnscrypt-proxy /usr/local/share/doc/dnscrypt-proxy /usr/local/sbin/dnscrypt-proxy /usr/local/bin/*resolvers*.sh /etc/cron.daily/dnscrypt-proxy.cron /etc/rc.d/rc.local
	fi

	echo "DNSCrypt Proxy Host setup completed"
}

